name: Release CLI Plugins

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "16.x"
      - name: Reading Configuration
        id: release_config
        uses: rgarcia-phi/json-to-variables@v1.1.0
        with:
          filename: .github/config/release.json
          prefix: release
      - name: Installing dependencies of core
        id: core-installation
        if: ${{env.release_releaseAll == 'true' || env.release_plugins_core == 'true'}}
        working-directory: ./packages/contentstack
        run: npm install
      - name: Publishing core
        id: publish-core
        uses: JS-DevTools/npm-publish@v1
        if: ${{ steps.core-installation.conclusion == 'success'  }}
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ./packages/contentstack/package.json
      - uses: actions/checkout@v2
        with:
          ref: "prod-qa-pipeline"
      - run: echo ${{ steps.publish-core.outputs.version  }} > version.md
      - uses: EndBug/add-and-commit@v9
        with:
          message: "Released version"
      - name: echo content of the directory
        run: ls -a
      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v${{ steps.publish-core.outputs.version }}
          release_name: Release ${{ steps.publish-core.outputs.version }}
          draft: false # Default value, but nice to set explicitly
          prerelease: false # Default value, but nice to set explicitly
